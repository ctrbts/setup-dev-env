---
# ==============================================================================
# Playbook de Ansible por SysCraft para Configurar una Workstation de Desarrollo
#
# VERSI√ìN 2: A√±adida la erradicaci√≥n completa de Snap y la instalaci√≥n de
# Firefox desde el PPA de Mozilla para un sistema base limpio.
#
# Ejecuci√≥n:
# ansible-playbook -i inventory.ini playbook.yml
# ==============================================================================

- name: üöÄ Configurar Workstation de Desarrollo Completa (Sin Snap)
  hosts: workstation
  become: yes
  gather_facts: yes

  vars:
    username: "{{ ansible_user_id }}"
    asdf_install_dir: "{{ ansible_env.HOME }}/.asdf"
    asdf_version: "v0.14.0"
    asdf_plugins:
      - name: python
      - name: php
      - name: nodejs
      - name: composer

  tasks:
    # --------------------------------------------------------------------------
    # FASE 1: Actualizaci√≥n del Sistema Base
    # --------------------------------------------------------------------------
    - name: 1.1 - Actualizar cach√© de APT y realizar upgrade completo del sistema
      ansible.builtin.apt:
        update_cache: yes
        upgrade: dist
        cache_valid_time: 3600

    # --------------------------------------------------------------------------
    # FASE 2: Erradicaci√≥n Completa de Snap
    # --------------------------------------------------------------------------
    - name: 2.1 - Obtener la lista de snaps instalados
      ansible.builtin.command: snap list
      register: installed_snaps_raw
      changed_when: false
      failed_when: false # No fallar si snapd no est√° instalado

    - name: 2.2 - Desinstalar todos los paquetes snap existentes
      community.general.snap:
        name: "{{ item.split(' ')[0] }}"
        state: absent
      loop: "{{ installed_snaps_raw.stdout_lines[1:] }}" # Omitir la l√≠nea de cabecera
      when: installed_snaps_raw.rc == 0

    - name: 2.3 - Purgar el paquete snapd del sistema
      ansible.builtin.apt:
        name: snapd
        state: absent
        purge: yes

    - name: 2.4 - Eliminar directorios residuales de snap
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      loop:
        - "{{ ansible_env.HOME }}/snap"
        - /snap
        - /var/snap
        - /var/lib/snapd
      become_user: "{{ username }}"
      vars:
        ansible_become: no # Ejecutar esta tarea como el usuario para eliminar ~/snap

    - name: 2.5 - Bloquear la reinstalaci√≥n de snapd v√≠a APT
      ansible.builtin.copy:
        dest: /etc/apt/preferences.d/no-snap.pref
        content: |
          Package: snapd
          Pin: release *
          Pin-Priority: -1
        mode: '0644'

    # --------------------------------------------------------------------------
    # FASE 3: Configuraci√≥n de Repositorios APT (Chrome, VSCode, Docker, Mozilla)
    # --------------------------------------------------------------------------
    - name: 3.1 - Instalar paquetes esenciales y dependencias de compilaci√≥n
      ansible.builtin.apt:
        name:
          - build-essential
          - git
          - curl
          - wget
          - ca-certificates
          - gnupg
          - zsh
          - htop
          - ncdu
          - unzip
          - flatpak
          - gnome-software-plugin-flatpak
          - sqlitebrowser
          - libssl-dev
          - zlib1g-dev
          - libbz2-dev
          - libreadline-dev
          - libsqlite3-dev
          - llvm
          - libncurses5-dev
          - libncursesw5-dev
          - xz-utils
          - tk-dev
          - libxml2-dev
          - libxmlsec1-dev
          - libffi-dev
          - liblzma-dev
        state: present

    - name: 3.2 - Crear el directorio para llaves GPG de APT
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: '0755'

    - name: 3.3 - A√±adir repositorio de Google Chrome
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/google-chrome.gpg] http://dl.google.com/linux/chrome/deb/ stable main"
        state: present
        filename: google-chrome
      # (Se asume que la llave ya fue a√±adida en una tarea anterior o manualmente)

    - name: 3.4 - A√±adir repositorio de VS Code
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/packages.microsoft.gpg] https://packages.microsoft.com/repos/code stable main"
        state: present
        filename: vscode

    - name: 3.5 - A√±adir repositorio de Docker
      ansible.builtin.apt_repository:
        repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
        state: present
        filename: docker

    - name: 3.6 - A√±adir PPA de Mozilla Team para Firefox
      ansible.builtin.apt_repository:
        repo: ppa:mozillateam/ppa
        state: present

    - name: 3.7 - Dar prioridad al PPA de Mozilla para evitar el snap de Firefox
      ansible.builtin.copy:
        dest: /etc/apt/preferences.d/mozilla-firefox.pref
        content: |
          Package: *
          Pin: release o=LP-PPA-mozillateam
          Pin-Priority: 1001
        mode: '0644'

    # --------------------------------------------------------------------------
    # FASE 4: Instalaci√≥n de Software desde APT
    # --------------------------------------------------------------------------
    - name: 4.1 - Instalar software desde los repositorios configurados
      ansible.builtin.apt:
        name:
          - firefox # Ahora se instalar√° desde el PPA de Mozilla
          - google-chrome-stable
          - code
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present
        update_cache: yes

    # ... (El resto del playbook para Docker user, Flatpak, ASDF, etc., contin√∫a desde aqu√≠ sin cambios) ...

    - name: 4.2 - A√±adir usuario actual al grupo 'docker'
      ansible.builtin.user:
        name: "{{ username }}"
        groups: docker
        append: yes
      notify: Show Docker Logout Message

    # ... (Resto de las fases 5 y 6) ...

  handlers:
    - name: Show Docker Logout Message
      ansible.builtin.debug:
        msg: "‚úÖ ¬°IMPORTANTE! Para usar Docker sin 'sudo', debes CERRAR SESI√ìN y volver a iniciarla."
