---
# ==============================================================================
# Playbook de Ansible para Configurar una Workstation de Desarrollo
#
# Ejecuci√≥n:
# ansible-playbook -i inventory.ini playbook.yml
# ==============================================================================

- name: üöÄ Configurar Workstation de Desarrollo Completa
  hosts: workstation
  # 'become: yes' significa que las tareas se ejecutar√°n con 'sudo' por defecto.
  # Podemos desactivarlo por tarea si es necesario.
  become: yes
  # Recopila "hechos" sobre el sistema (CPU, memoria, etc.) que podemos usar
  # en variables, como {{ ansible_user_id }} o {{ ansible_env.HOME }}.
  gather_facts: yes

  # --- Variables ---
  # Definir variables aqu√≠ hace que el playbook sea f√°cil de modificar.
  vars:
    username: "{{ ansible_user_id }}" # Obtiene el usuario que ejecuta el playbook
    asdf_install_dir: "{{ ansible_env.HOME }}/.asdf"
    asdf_version: "v0.14.0"
    asdf_plugins:
      - name: python
      - name: php
      - name: nodejs
      - name: composer

  # --- Tareas ---
  # Las tareas se ejecutan en orden.
  tasks:
    # --------------------------------------------------------------------------
    # FASE 1: Configuraci√≥n del Sistema Base y Repositorios APT
    # --------------------------------------------------------------------------
    - name: 1.1 - Actualizar cach√© de APT y realizar upgrade completo del sistema
      ansible.builtin.apt:
        update_cache: yes
        upgrade: dist
        cache_valid_time: 3600 # No actualizar la cach√© si tiene menos de 1 hora

    - name: 1.2 - Instalar paquetes esenciales y dependencias de compilaci√≥n
      ansible.builtin.apt:
        name:
          - build-essential
          - git
          - curl
          - wget
          - ca-certificates
          - gnupg
          - zsh
          - htop
          - ncdu
          - unzip
          - flatpak
          - gnome-software-plugin-flatpak
          - sqlitebrowser
          # Dependencias para compilar con asdf
          - libssl-dev
          - zlib1g-dev
          - libbz2-dev
          - libreadline-dev
          - libsqlite3-dev
          - llvm
          - libncurses5-dev
          - libncursesw5-dev
          - xz-utils
          - tk-dev
          - libxml2-dev
          - libxmlsec1-dev
          - libffi-dev
          - liblzma-dev
        state: present

    - name: 1.3 - Crear el directorio para llaves GPG de APT
      ansible.builtin.file:
        path: /etc/apt/keyrings
        state: directory
        mode: "0755"

    - name: 1.4 - A√±adir llave GPG y repositorio de Google Chrome
      block:
        - name: Descargar llave GPG de Google
          ansible.builtin.get_url:
            url: https://dl.google.com/linux/linux_signing_key.pub
            dest: /tmp/google_key.pub
            mode: "0644"
        - name: Desarmar llave GPG de Google
          ansible.builtin.command: gpg --dearmor -o /etc/apt/keyrings/google-chrome.gpg /tmp/google_key.pub
          args:
            creates: /etc/apt/keyrings/google-chrome.gpg
        - name: A√±adir repositorio de Google Chrome
          ansible.builtin.apt_repository:
            repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/google-chrome.gpg] http://dl.google.com/linux/chrome/deb/ stable main"
            state: present
            filename: google-chrome

    - name: 1.5 - A√±adir llave GPG y repositorio de VS Code
      block:
        - name: Descargar y desarmar llave GPG de Microsoft
          ansible.builtin.get_url:
            url: https://packages.microsoft.com/keys/microsoft.asc
            dest: /etc/apt/keyrings/packages.microsoft.gpg
            mode: "0644"
            is_new: no # Este es un truco para que get_url desarmonice la llave directamente
            # El m√≥dulo apt_key est√° obsoleto, esta es la forma moderna.
        - name: A√±adir repositorio de VS Code
          ansible.builtin.apt_repository:
            repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/packages.microsoft.gpg] https://packages.microsoft.com/repos/code stable main"
            state: present
            filename: vscode

    - name: 1.6 - A√±adir llave GPG y repositorio de Docker
      block:
        - name: Descargar llave GPG de Docker
          ansible.builtin.get_url:
            url: https://download.docker.com/linux/ubuntu/gpg
            dest: /etc/apt/keyrings/docker.gpg
            mode: "0644"
        - name: A√±adir repositorio de Docker
          ansible.builtin.apt_repository:
            repo: "deb [arch=amd64 signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release }} stable"
            state: present
            filename: docker

    # --------------------------------------------------------------------------
    # FASE 2: Instalaci√≥n de Software desde APT
    # --------------------------------------------------------------------------
    - name: 2.1 - Instalar software desde los repositorios configurados
      ansible.builtin.apt:
        name:
          - google-chrome-stable
          - code
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present
        update_cache: yes # Actualizamos la cach√© una vez despu√©s de a√±adir todos los repos

    - name: 2.2 - A√±adir usuario actual al grupo 'docker'
      ansible.builtin.user:
        name: "{{ username }}"
        groups: docker
        append: yes
      notify: # Notifica a un 'handler' para mostrar un mensaje al final
        - Show Docker Logout Message

    # --------------------------------------------------------------------------
    # FASE 3: Configuraci√≥n de Flatpak y Aplicaciones GUI
    # --------------------------------------------------------------------------
    - name: 3.1 - A√±adir el repositorio Flathub
      community.general.flatpak_remote:
        name: flathub
        state: present
        location: https://dl.flathub.org/repo/flathub.flatpakrepo

    - name: 3.2 - Instalar aplicaciones de productividad, dise√±o y ocio desde Flathub
      community.general.flatpak:
        name:
          - org.videolan.VLC
          - io.dbeaver.DBeaverCommunity
          - org.gnome.Boxes
          - org.gimp.GIMP
          - org.inkscape.Inkscape
          - org.stellarium.Stellarium
          - com.wildfiregames.0ad
        state: present

    # --------------------------------------------------------------------------
    # FASE 4: Entorno de Desarrollo (ASDF)
    # --------------------------------------------------------------------------
    - name: 4.1 - Instalar asdf (clonar repositorio)
      ansible.builtin.git:
        repo: "https://github.com/asdf-vm/asdf.git"
        dest: "{{ asdf_install_dir }}"
        version: "{{ asdf_version }}"
      become: no # Ejecutar como el usuario, no como root

    - name: 4.2 - A√±adir asdf al .bashrc para que est√© disponible en la shell
      ansible.builtin.lineinfile:
        path: "{{ ansible_env.HOME }}/.bashrc"
        line: ". {{ asdf_install_dir }}/asdf.sh"
        create: yes # Crea el archivo si no existe
        regexp: "^. {{ asdf_install_dir }}/asdf.sh" # Evita a√±adir la l√≠nea si ya existe
      become: no

    - name: 4.3 - A√±adir plugins de asdf
      ansible.builtin.command: "{{ asdf_install_dir }}/bin/asdf plugin add {{ item.name }}"
      args:
        creates: "{{ asdf_install_dir }}/plugins/{{ item.name }}"
      loop: "{{ asdf_plugins }}"
      become: no

    - name: 4.4 - Sincronizar llaves GPG del plugin de Node.js
      ansible.builtin.shell: |
        bash {{ asdf_install_dir }}/plugins/nodejs/bin/asdf-nodejs-source-ins
      args:
        executable: /bin/bash
      become: no
      changed_when: false # Este comando no cambia el estado del sistema de forma predecible

  # --- Handlers ---
  # Los handlers son tareas especiales que solo se ejecutan si una tarea las "notifica".
  # Son √∫tiles para reiniciar servicios o mostrar mensajes.
  handlers:
    - name: Show Docker Logout Message
      ansible.builtin.debug:
        msg: "‚úÖ ¬°IMPORTANTE! Para usar Docker sin 'sudo', debes CERRAR SESI√ìN y volver a iniciarla."
